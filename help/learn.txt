
When the app is on heroku or a real development server, everything is being hosted together, but when you host locally there are two servers (sort of). One is hosting the React code on port 3000 and automagically updates and builds the html from react code as you edit. It gives the html and javascript to your browser when you go to some address, but doesn't do anything else. The other server is the standard Node server. It listens for requests made by javascript that we write. Because there are two servers, the requests being made from the clients javascript have to get rerouted to the Node server, which we have put on port 3001. This is defined in the client/package.json "proxy" field. Heroku ignores this since it is all the same port. You'll need to define DATABASE_URL and DATABASE_SKIPSSL=1



Notice that if you navigate to *URL OF INDEX*/api/passwords and get the response from the server. The Node.js server will respond to anyone that asks. There is nothing special about the react code running in your browser.



React scripts automatically restart the when you make changes, but Node.js doesn't, so we use "nodemon" to do that. It's a special program we had to install seperately.



There was annoying issue where the react script would automatically launch a new browser. So after debugging 10 times you'll have 10 windows to close. This was fixed by adding the .env file and putting BROWSER=none.



Apparently backtick ` (to the left of the 1 key) in js lets you format a string: "Sent ${count}" will put the count variable in the right spot.



If you don't commit the yarn.lock file, Heroku will be very upset.



Search all in Visual Studio Code is tricky. Ctrl + Shift + F, then you need to click on the 3 dots on the right to drop down 2 more fields. Then you need to enter * into the files to include field for it to include all files.




Getting socket.io to work was a bit of a nightmare. It kept complaning about inability to find/access socket.io.js. Turns out the solution was here: 
https://stackoverflow.com/questions/17696801/express-js-app-listen-vs-server-listen
53b061d6dc02af4772d344158aac562ff308155b



React wont let you pick a different baseUrl for typescript, so we'll just stick with the defaults.

